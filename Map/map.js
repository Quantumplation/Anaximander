var paper, offset;

function getTickList() {
    $.get("http://quantumplation.me:4000/Anaximander", function(data) {
        var select = $("#tick-select");
        var t = select.val();
        select.empty();
        
        var ticks = data.split("\n");
        for (var i in ticks) {
            if (ticks[i])
                select.append("<option value='" + ticks[i] + "'>" + ticks[i] + "</option>");
        }
        
        if (t)
            select.val(t);
        else
            select.children(":last").attr("selected", "selected");
        
        loadAndDraw($("#tick-select").val());
    });
}

function loadAndDraw(tick) {
    if (!tick) return;

    //Data about the universe, obtained from the game
    var stellarData;
    
    //Metadata about the universe, generated by us
    //TODO:: Fetch this from the server (below) instead of hardcoding it
    var strategicData = {
        alliances: {                    //Define what alliances exist
            0: { color: "green" }
        },
        playerAllianceMembership: {     //Define which players are in which alliance
            47: 0, //Quantumplation
            28: 0, //Nyarlathothep
            41: 0, //SolidX
            46: 0, //Pigyman
            62: 0, //Gingervitis
        }
    }
    
    $.getJSON("http://quantumplation.me:4000/Anaximander/" + tick, function(data)
    {
        stellarData = data;
        
        //Get strategic data from server here
        
        draw(stellarData, strategicData);
    });
}

function draw(stellarData, strategicData) {
    offset = {"x": document.documentElement.clientWidth / 2, "y": document.documentElement.clientHeight / 2};
    $("svg > g").empty();

    drawStars(stellarData, strategicData);
    drawFleets(stellarData, strategicData);
}

function drawStars(stellarData, strategicData) {
    for (var i in stellarData.report.stars) {
        var star = stellarData.report.stars[i];
        
        var color;
        if (star.puid == -1)                                                        //If the star is not ownedthen render is as either visible or not
            color = star.v == "0" ? "black" : "white";
        else                                                                        //If the star *is* owned, draw it with alliance colors
        {
            var playerAlliance = strategicData.playerAllianceMembership[star.puid];
            if (playerAlliance != undefined)
            {
                alliance = strategicData.alliances[playerAlliance];
                color = alliance.color;
            }
            else
                color = "gray";
        }
        
        paper.circle(star.x * 100 + offset.x, star.y * 100 + offset.y, 3).attr({"stroke": "gray", "stroke-width": "1", "fill": color});
    }
}

function drawFleets(stellarData, strategicData) {
}

$(function() {
    paper = Raphael("container");
    new RaphaelZPD(paper, { zoom: true, pan: true, drag: false });
    
    // fuck you raphael
    var svg = document.querySelector("svg");
    svg.removeAttribute("width");
    svg.removeAttribute("height");
    svg.style.width = "100vw";
    svg.style.height = "100vh";
    
    getTickList();
    $("#reload").click(getTickList);
});